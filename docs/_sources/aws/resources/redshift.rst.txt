aws.redshift resources
######################



  - :ref:`aws.redshift <aws.redshift>`

  - :ref:`aws.redshift-snapshot <aws.redshift-snapshot>`

  - :ref:`aws.redshift-subnet-group <aws.redshift-subnet-group>`




.. _aws.redshift:

aws.redshift
============



Filters
-------


  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`default-vpc <aws.redshift.filters.default-vpc>`

  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`kms-key <aws.redshift.filters.kms-key>`

  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`metrics <aws.common.filters.metrics>`
  
  - :ref:`network-location <aws.common.filters.network-location>`
  
  - :ref:`param <aws.redshift.filters.param>`

  - :ref:`security-group <aws.common.filters.security-group>`
  
  - :ref:`subnet <aws.common.filters.subnet>`
  
  - :ref:`value <aws.common.filters.value>`
  


.. _aws.redshift.filters.default-vpc:

default-vpc
+++++++++++
Matches if an redshift database is in the default vpc

:example:

.. code-block:: yaml

        policies:
          - name: redshift-default-vpc
            resource: redshift
            filters:
              - default-vpc

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - default-vpc
    required:
    - type


.. _aws.redshift.filters.kms-key:

kms-key
+++++++
Filter a resource by its associcated kms key and optionally the aliasname
of the kms key by using 'c7n:AliasName'

:example:

    .. code-block:: yaml

        policies:
            - name: redshift-kms-key-filters
              resource: redshift
              filters:
                - type: kms-key
                  key: c7n:AliasName
                  value: "^(alias/aws/)"
                  op: regex

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      match-resource:
        type: boolean
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      operator:
        enum:
        - and
        - or
      type:
        enum:
        - kms-key
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
    required:
    - type


.. _aws.redshift.filters.param:

param
+++++
Filter redshift clusters based on parameter values

:example:

.. code-block:: yaml

        policies:
          - name: redshift-param-ssl
            resource: redshift
            filters:
              - type: param
                key: require_ssl
                value: false
                op: eq

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - param
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
    required:
    - type




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`delete <aws.redshift.actions.delete>`

  - :ref:`enable-vpc-routing <aws.redshift.actions.enable-vpc-routing>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`modify-security-groups <aws.common.actions.modify-security-groups>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`retention <aws.redshift.actions.retention>`

  - :ref:`set-public-access <aws.redshift.actions.set-public-access>`

  - :ref:`snapshot <aws.redshift.actions.snapshot>`

  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`tag-trim <aws.common.actions.tag-trim>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.redshift.actions.delete:

delete
++++++
Action to delete a redshift cluster

To prevent unwanted deletion of redshift clusters, it is recommended to
apply a filter to the rule

:example:

.. code-block:: yaml

        policies:
          - name: redshift-no-ssl
            resource: redshift
            filters:
              - type: param
                key: require_ssl
                value: false
                op: eq
            actions:
              - type: delete

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      skip-snapshot:
        type: boolean
      type:
        enum:
        - delete
    required:
    - type


.. _aws.redshift.actions.enable-vpc-routing:

enable-vpc-routing
++++++++++++++++++
Action to enable enhanced vpc routing on a redshift cluster

More: https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html

:example:

.. code-block:: yaml

        policies:
          - name: redshift-enable-enhanced-routing
            resource: redshift
            filters:
              - type: value
                key: EnhancedVpcRouting
                value: false
                op: eq
            actions:
              - type: enable-vpc-routing
                value: true

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - enable-vpc-routing
      value:
        type: boolean
    required:
    - type


.. _aws.redshift.actions.retention:

retention
+++++++++
Action to set the snapshot retention period (in days)

:example:

.. code-block:: yaml

        policies:
          - name: redshift-snapshot-retention
            resource: redshift
            filters:
              - type: value
                key: AutomatedSnapshotRetentionPeriod
                value: 21
                op: ne
            actions:
              - type: retention
                days: 21

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      days:
        type: number
      type:
        enum:
        - retention
    required:
    - type


.. _aws.redshift.actions.set-public-access:

set-public-access
+++++++++++++++++
Action to set the 'PubliclyAccessible' setting on a redshift cluster

:example:

.. code-block:: yaml

        policies:
            - name: redshift-set-public-access
              resource: redshift
              filters:
                - PubliclyAccessible: true
              actions:
                - type: set-public-access
                  state: false

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      state:
        type: boolean
      type:
        enum:
        - set-public-access
    required:
    - type


.. _aws.redshift.actions.snapshot:

snapshot
++++++++
Action to take a snapshot of a redshift cluster

:example:

.. code-block:: yaml

        policies:
          - name: redshift-snapshot
            resource: redshift
            filters:
              - type: value
                key: ClusterStatus
                value: available
                op: eq
            actions:
              - snapshot

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - snapshot
    required:
    - type



.. _aws.redshift-snapshot:

aws.redshift-snapshot
=====================

Resource manager for Redshift snapshots.
    

Filters
-------


  - :ref:`age <aws.redshift-snapshot.filters.age>`

  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`cross-account <aws.redshift-snapshot.filters.cross-account>`

  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`value <aws.common.filters.value>`
  


.. _aws.redshift-snapshot.filters.age:

age
+++
Filters redshift snapshots based on age (in days)

:example:

.. code-block:: yaml

        policies:
          - name: redshift-old-snapshots
            resource: redshift-snapshot
            filters:
              - type: age
                days: 21
                op: gt

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      days:
        type: number
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - age
    required:
    - type


.. _aws.redshift-snapshot.filters.cross-account:

cross-account
+++++++++++++
Filter all accounts that allow access to non-whitelisted accounts
    

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - cross-account
      whitelist:
        items:
          type: string
        type: array
      whitelist_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
    required:
    - type




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`delete <aws.redshift-snapshot.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`revoke-access <aws.redshift-snapshot.actions.revoke-access>`

  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.redshift-snapshot.actions.delete:

delete
++++++
Filters redshift snapshots based on age (in days)

:example:

.. code-block:: yaml

        policies:
          - name: redshift-delete-old-snapshots
            resource: redshift-snapshot
            filters:
              - type: age
                days: 21
                op: gt
            actions:
              - delete

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type


.. _aws.redshift-snapshot.actions.revoke-access:

revoke-access
+++++++++++++
Revokes ability of accounts to restore a snapshot

:example:

    .. code-block:: yaml

        policies:
          - name: redshift-snapshot-revoke-access
            resource: redshift-snapshot
            filters:
              - type: cross-account
                whitelist:
                  - 012345678910
            actions:
              - type: revoke-access

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - revoke-access
    required:
    - type



.. _aws.redshift-subnet-group:

aws.redshift-subnet-group
=========================

Redshift subnet group.

Filters
-------


  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`value <aws.common.filters.value>`
  




Actions
-------


  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



