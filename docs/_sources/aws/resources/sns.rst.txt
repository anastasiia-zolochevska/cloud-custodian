aws.sns resources
#################




.. _aws.sns:

aws.sns
=======



Filters
-------


  - :ref:`cross-account <aws.sns.filters.cross-account>`

  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`kms-key <aws.sns.filters.kms-key>`

  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`metrics <aws.common.filters.metrics>`
  
  - :ref:`value <aws.common.filters.value>`
  


.. _aws.sns.filters.cross-account:

cross-account
+++++++++++++
Filter to return all SNS topics with cross account access permissions

The whitelist parameter will omit the accounts that match from the return

:example:

    .. code-block:

        policies:
          - name: sns-cross-account
            resource: sns
            filters:
              - type: cross-account
                whitelist:
                  - permitted-account-01
                  - permitted-account-02

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      actions:
        items:
          type: string
        type: array
      everyone_only:
        type: boolean
      type:
        enum:
        - cross-account
      whitelist:
        items:
          type: string
        type: array
      whitelist_conditions:
        items:
          type: string
        type: array
      whitelist_endpoints:
        items:
          type: string
        type: array
      whitelist_endpoints_from: &id001
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      whitelist_from: *id001
      whitelist_orgids:
        items:
          type: string
        type: array
      whitelist_orgids_from: *id001
      whitelist_protocols:
        items:
          enum:
          - http
          - https
          - email
          - email-json
          - sms
          - sqs
          - application
          - lambda
          type: string
        type: array
      whitelist_protocols_from: *id001
      whitelist_vpc:
        items:
          type: string
        type: array
      whitelist_vpc_from: *id001
      whitelist_vpce:
        items:
          type: string
        type: array
      whitelist_vpce_from: *id001
    required:
    - type


.. _aws.sns.filters.kms-key:

kms-key
+++++++
Filter a resource by its associcated kms key and optionally the aliasname
of the kms key by using 'c7n:AliasName'

:example:

    .. code-block:: yaml

        policies:
            - name:
              resource: dms-instance
              filters:
                - type: kms-key
                  key: c7n:AliasName
                  value: alias/aws/dms

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      match-resource:
        type: boolean
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      operator:
        enum:
        - and
        - or
      type:
        enum:
        - kms-key
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
    required:
    - type




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`delete <aws.sns.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`modify-policy <aws.common.actions.modify-policy>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-statements <aws.sns.actions.remove-statements>`

  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`set-encryption <aws.sns.actions.set-encryption>`

  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.sns.actions.delete:

delete
++++++
Deletes a SNS Topic

:example:

.. code-block:: yaml

  policies:
    - name: delete-bad-topic
      resource: aws.sns
      filters:
        - TopicArn: arn:aws:sns:us-east-2:123456789012:BadTopic
      actions:
        - type: delete

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type


.. _aws.sns.actions.remove-statements:

remove-statements
+++++++++++++++++
Action to remove policy statements from SNS

:example:

.. code-block:: yaml

       policies:
          - name: remove-sns-cross-account
            resource: sns
            filters:
              - type: cross-account
            actions:
              - type: remove-statements
                statement_ids: matched

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      statement_ids:
        oneOf:
        - enum:
          - matched
          - '*'
        - items:
            type: string
          type: array
      type:
        enum:
        - remove-statements
    required:
    - statement_ids
    - type


.. _aws.sns.actions.set-encryption:

set-encryption
++++++++++++++
Set Encryption on SNS Topics

By default if no key is specified, alias/aws/sns is used

key can either be a KMS key ARN, key id, or an alias

:example:

.. code-block:: yaml

    policies:
        - name: set-sns-topic-encryption
          resource: sns
          actions:
            - type: set-encryption
              key: alias/cmk/key
              enabled: true

        - name: set-sns-topic-encryption-with-id
          resource: sns
          actions:
            - type: set-encryption
              key: abcdefgh-1234-1234-1234-123456789012
              enabled: true

        - name: set-sns-topic-encryption-with-arn
          resource: sns
          actions:
            - type: set-encryption
              key: arn:aws:kms:us-west-1:123456789012:key/abcdefgh-1234-1234-1234-123456789012
              enabled: true

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      enabled:
        type: boolean
      key:
        type: string
      type:
        enum:
        - set-encryption
    required:
    - type


